/*! jQuery.file-upload - v0.1.0 - 2015-12-12 */
!function(a){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=a(require("jquery"),window,document):a(jQuery,window,document)}(function(a,b,c,d){"use strict";var e,f={},g={url:"upload",deleteUrl:"upload",uploadButton:"#uploadButton",fileButton:"#file",uploadInfo:".uploadInfo",uploadInfoRowClass:"uploadInfoRow",stopButton:".stopButton",deleteButton:".deleteButton",dropArea:".dropArea",enableDragAndDrop:!0,progressCallBack:function(){},abortCallBack:function(){},doneUploadCallBack:function(){},failUploadCallBack:function(){},stopCallBack:function(){},doneDeleteCallBack:function(){},failDeleteCallBack:function(){},dragEnterCallBack:function(){},dragLeaveCallBack:function(){},dragOverCallBack:function(){},
// 行内の要素
rowHtml:'<div class="fileName"></div><div class="transferSize"></div><div class="transferStatus"><div class="progressBar"></div></div><div class="operation"><input type="button" class="stopButton" value="停止"><input type="button" class="deleteButton hide" value="削除"></div>',rowEl:{$fileName:".fileName",$transferSize:".transferSize",$transferStatus:".transferStatus",$progressBar:".progressBar"}},h={type:"post",processData:!1,contentType:!1,// 送信するデータをFormDataにする場合、こうしないといけない。
cache:!1,dataType:"json"},i=function(b,c){
// コンストラクタ
this.$upload=c,this.$uploadInfo=this.$upload.find(f.uploadInfo),this.$uploadInfoRow=a("<div></div>").addClass(f.uploadInfoRowClass),this.$uploadInfo.append(this.$uploadInfoRow),this.fileName=b.name,this.fileSize=b.size,this.loadedSize=0,
// stopButtonを押して停止したかどうか
this.explicitStop=!1,
// 行内の要素
this.$uploadInfoRow.html(f.rowHtml);for(var d in f.rowEl)f.rowEl.hasOwnProperty(d)&&(this[d]=this.$uploadInfoRow.find(f.rowEl[d]));this.formData=new FormData,this.formData.append("file",b);
// イベント処理
var e=this;if(this.$stopButton=this.$uploadInfoRow.find(f.stopButton),this.$deleteButton=this.$uploadInfoRow.find(f.deleteButton),this.$stopButton&&this.$stopButton.on("click",function(){f.stopCallBack.call(e)}),this.$deleteButton){var e=this;this.$deleteButton.on("click",function(){e.fileId&&(a.ajax({url:f.deleteUrl+"/"+e.fileId,cache:!1,method:"delete"}).done(function(){f.doneDeleteCallBack.call(e)}).fail(function(a,b,c){f.failDeleteCallBack.call(e)}),e.$deleteButton&&e.$deleteButton.hide())})}};i.prototype.start=function(){var b=this,c=a.extend({xhr:function(){var a=new global.XMLHttpRequest;
// アップロードの進捗
// 中止の場合
return a.upload.addEventListener("progress",function(a){b.progress.call(b,a)},!1),a.addEventListener("abort",function(a){b.abort.call(b,a)},!1),a},url:f.url,data:b.formData},h);b.ajax=a.ajax(c).done(function(a){f.doneUploadCallBack.call(b,a),b.ajax=null}).fail(function(a,c,d){f.failUploadgrCallBack.call(b,a,c,d),b.ajax=null})},/**
   * アップロード処理中のコールバック。<br>
   * アップロードしたサイズを記録する。
   * @param event イベント
   */
i.prototype.progress=function(a){a.lengthComputable&&(this.loadedSize=a.loaded,this.loadedSize>this.fileSize&&(this.loadedSize=this.fileSize)),f.progressCallBack.call(this,a)},/**
   * アップロードが中断された時のコールバック
   * @param event イベント
   */
i.prototype.abort=function(a){f.abortCallBack.call(this,a)},/**
   * アップロードを明示して停止する際のメソッド
   */
i.prototype.stop=function(){this.ajax&&(this.explicitStop=!0,this.ajax.abort()),f.call.stopCallBack(this)},/**
   * 表示用のファイルサイズ
   * @param plainSize 実際のファイルサイズ（バイト）
   * @returns {string} 表示用のファイルサイズ
   */
i.prototype.getDispFileSize=function(a){for(var b=["B","KB","MB","GB","TB"],c=parseInt(a,10),d=0;d<b.length&&!(1e3>c);d++)c/=1024;return c=c===Math.floor(c)?Math.floor(c):c.toPrecision(3),c+b[d]};var j=function(){var b=a(this),c=b.find(f.dropArea);c.on("dragenter",function(a){a.preventDefault(),a.stopPropagation(),f.dragEnterCallBack.call(this,c)}),c.on("dragleave",function(a){a.preventDefault(),a.stopPropagation(),f.dragLeaveCallBack.call(this,c)}),c.on("dragover",function(a){a.preventDefault(),a.stopPropagation(),f.dragOverCallBack.call(this,c)}),c.on("drop",function(a){a.preventDefault(),a.stopPropagation(),k(a.originalEvent.dataTransfer.files,b)})},k=function(a,b){for(var c=0;c<a.length;c++){var d=new i(a[c],b);d.start()}};a.fn.fileUpload=function(b){f=a.extend(g,b);var c=this;e=a(f.fileButton),a(f.uploadButton).on("click",function(){e.trigger("click")}),f.enableDragAndDrop&&j.call(this),e.on("change",function(){k(e[0].files,c)})}});
//# sourceMappingURL=jquery.file-upload.min.js.map