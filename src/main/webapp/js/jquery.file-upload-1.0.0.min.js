!function(t,a){"use strict";var o,l={},e={url:"upload",deleteUrl:"upload",uploadButton:"#uploadButton",fileButton:"#file",uploadInfo:".uploadInfo",uploadInfoRowClass:"uploadInfoRow",stopButton:".stopButton",deleteButton:".deleteButton",enableDragAndDrop:!0,dropArea:".dropArea",startUploadCallBack:function(){},progressCallBack:function(){},abortCallBack:function(){},doneUploadCallBack:function(){},failUploadCallBack:function(){},stopCallBack:function(){},doneDeleteCallBack:function(){},failDeleteCallBack:function(){},dragEnterCallBack:function(){},dragLeaveCallBack:function(){},dragOverCallBack:function(){},rowHtml:'<div class="fileName"></div><div class="transferSize"></div><div class="transferStatus"><div class="progressBar"></div></div><div class="operation"><input type="button" class="stopButton" value="停止"><input type="button" class="deleteButton hide" value="削除"></div>',rowEl:{$fileName:".fileName",$transferSize:".transferSize",$transferStatus:".transferStatus",$progressBar:".progressBar"}},n={type:"post",processData:!1,contentType:!1,cache:!1,dataType:"json"},i=function(a,o){this.$upload=o,this.$uploadInfo=this.$upload.find(l.uploadInfo),this.$uploadInfoRow=t("<div></div>").addClass(l.uploadInfoRowClass),this.$uploadInfo.append(this.$uploadInfoRow),this.fileName=a.name,this.fileSize=a.size,this.loadedSize=0,this.explicitStop=!1,this.$uploadInfoRow.html(l.rowHtml);for(var e in l.rowEl)l.rowEl.hasOwnProperty(e)&&(this[e]=this.$uploadInfoRow.find(l.rowEl[e]));this.formData=new FormData,this.formData.append("file",a);var n=this;this.$stopButton=this.$uploadInfoRow.find(l.stopButton),this.$deleteButton=this.$uploadInfoRow.find(l.deleteButton),this.$stopButton&&this.$stopButton.on("click",function(){l.stopCallBack.call(n)}),this.$deleteButton&&this.$deleteButton.on("click",function(){n.fileId&&(t.ajax({url:l.deleteUrl+"/"+n.fileId,cache:!1,method:"delete"}).done(function(){l.doneDeleteCallBack.call(n)}).fail(function(t,a,o){l.failDeleteCallBack.call(n,t,a,o)}),n.$deleteButton&&n.$deleteButton.hide())})};i.prototype.start=function(){var o=this;l.startUploadCallBack.call(o);var e=t.extend({xhr:function(){var t=new a.XMLHttpRequest;return t.upload.addEventListener("progress",function(t){o.progress.call(o,t)},!1),t.addEventListener("abort",function(t){o.abort.call(o,t)},!1),t},url:l.url,data:o.formData},n);o.ajax=t.ajax(e).done(function(t){l.doneUploadCallBack.call(o,t),o.ajax=null}).fail(function(t,a,e){l.failUploadCallBack.call(o,t,a,e),o.ajax=null})},i.prototype.progress=function(t){t.lengthComputable&&(this.loadedSize=t.loaded,this.loadedSize>this.fileSize&&(this.loadedSize=this.fileSize)),l.progressCallBack.call(this,t)},i.prototype.abort=function(t){l.abortCallBack.call(this,t)},i.prototype.stop=function(){this.ajax&&(this.explicitStop=!0,this.ajax.abort()),l.call.stopCallBack(this)},i.prototype.getDispFileSize=function(t){for(var a=["B","KB","MB","GB","TB"],o=parseInt(t,10),l=0;l<a.length&&!(o<1e3);l++)o/=1024;return o=o===Math.floor(o)?Math.floor(o):o.toPrecision(3),o+a[l]};var r=function(){var a=t(this),o=a.find(l.dropArea);o.on("dragenter",function(t){t.preventDefault(),t.stopPropagation(),l.dragEnterCallBack.call(this,o)}),o.on("dragleave",function(t){t.preventDefault(),t.stopPropagation(),l.dragLeaveCallBack.call(this,o)}),o.on("dragover",function(t){t.preventDefault(),t.stopPropagation(),l.dragOverCallBack.call(this,o)}),o.on("drop",function(t){t.preventDefault(),t.stopPropagation(),s(t.originalEvent.dataTransfer.files,a)})},s=function(t,a){for(var o=0;o<t.length;o++){var l=new i(t[o],a);l.start()}};t.fn.fileUpload=function(a){l=t.extend(e,a);var n=this;o=t(l.fileButton),t(l.uploadButton).on("click",function(){o.trigger("click")}),l.enableDragAndDrop&&r.call(this),o.on("change",function(){s(o[0].files,n)})}}(jQuery,this);